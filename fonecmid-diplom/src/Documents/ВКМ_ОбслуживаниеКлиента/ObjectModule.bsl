#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ,Режим)
	
	ВыполнениеПроверкиУсловия(Отказ);
	
	// регистр ВКМ_ВыполненныеКлиентуРаботы Приход
    Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка КАК Регистратор,
		|	ВКМ_ОбслуживаниеКлиента.Дата КАК Период,
		|	ВКМ_ОбслуживаниеКлиента.Договор КАК Договор,
		|	ВКМ_ОбслуживаниеКлиента.Клиент КАК Клиент,
		|	СУММА(ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ЧасыКОплатеКлиенту) КАК КоличествоЧасов,
		|	СУММА(ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ЧасыКОплатеКлиенту * ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы) КАК СуммаКОплате,
		|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|			ПО ВКМ_ОбслуживаниеКлиента.Договор = ДоговорыКонтрагентов.Ссылка
		|		ПО ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка = ВКМ_ОбслуживаниеКлиента.Ссылка
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОбслуживаниеКлиента.Договор,
		|	ВКМ_ОбслуживаниеКлиента.Дата,
		|	ВКМ_ОбслуживаниеКлиента.Клиент,
		|	ВКМ_ОбслуживаниеКлиента.Специалист,
		|	ВКМ_ОбслуживаниеКлиента.Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход; 
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);

	КонецЦикла;
	
	ПроцентОтРабот = ПолучитьПроцентОплатыСпециалиста();
	
	Если ПроцентОтРабот = Неопределено Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для специалиста " + Специалист + " на дату " + Формат(Дата, "ДФ=dd.MM.yyyy") + " не установлен процент оплаты от работ.");
		Возврат;
	КонецЕсли; 
	
	СтавкаЧасаКлиента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_СтоимостьЧасаРаботы");
	
	// регистр ВКМ_ВыполненныеСотрудникомРаботы Расход
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	
	Для Каждого ТекСтрокаВыполненныеРаботы Из ВыполненныеРаботы Цикл
		Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Сотрудник = Специалист;
		Движение.ЧасовКОплате = ТекСтрокаВыполненныеРаботы.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = ТекСтрокаВыполненныеРаботы.ЧасыКОплатеКлиенту * СтавкаЧасаКлиента * ПроцентОтРабот / 100;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = "";
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		
		Спр_ВКМ_УведомленияТГБот = Справочники.ВКМ_УведомленияТГБот.СоздатьЭлемент();
		
		ТекстСообщения = СтрШаблон("Для специалиста %1 новая заявка: %2", 
						Специалист, ОписаниеПроблемы);
		Спр_ВКМ_УведомленияТГБот.ТекстСообщения = ТекстСообщения;
		Спр_ВКМ_УведомленияТГБот.Записать();
		
	Иначе 

		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРабот,
			|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРаботПлан КАК ВремяНачалаРаботПлан,
			|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРаботПлан КАК ВремяОкончанияРаботПлан,
			|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист,
			|	ВКМ_ОбслуживаниеКлиента.Номер КАК Номер,
			|	ВКМ_ОбслуживаниеКлиента.Дата КАК Дата
			|ИЗ
			|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
			|ГДЕ
			|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
			|	И (ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот <> &ДатаПроведенияРабот
			|			ИЛИ ВКМ_ОбслуживаниеКлиента.ВремяНачалаРаботПлан <> &ВремяНачалаРаботПлан
			|			ИЛИ ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРаботПлан <> &ВремяОкончанияРаботПлан
			|			ИЛИ ВКМ_ОбслуживаниеКлиента.Специалист <> &Специалист)";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("ДатаПроведенияРабот", ДатаПроведенияРабот);
		Запрос.УстановитьПараметр("ВремяНачалаРаботПлан", ВремяНачалаРаботПлан);
		Запрос.УстановитьПараметр("ВремяОкончанияРаботПлан", ВремяОкончанияРаботПлан);
		Запрос.УстановитьПараметр("Специалист", Специалист);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрШаблон("В заявке № %1 от %2", Выборка.Номер, Выборка.Дата);
			
			Если Выборка.ДатаПроведенияРабот <> ДатаПроведенияРабот Тогда
				
				ТекстСообщения = ТекстСообщения + Символы.ПС + 
				СтрШаблон("изменена дата проведения работ с %1 на %2", 
				Выборка.ДатаПроведенияРабот,
				ДатаПроведенияРабот);
				
			КонецЕсли;
			
			Если Выборка.Специалист <> Специалист Тогда
				
				ТекстСообщения = ТекстСообщения + Символы.ПС + 
				СтрШаблон("изменен специалист с %1 на %2", 
				Выборка.Специалист,
				Специалист);
				
			КонецЕсли;
			
			Если Выборка.ВремяНачалаРаботПлан <> ВремяНачалаРаботПлан Тогда
				
				ТекстСообщения = ТекстСообщения + Символы.ПС + 
				СтрШаблон("изменено время начала работ с %1 на %2", 
				Выборка.ВремяНачалаРаботПлан,
				ВремяНачалаРаботПлан);
				
			КонецЕсли;
			
			Если Выборка.ВремяОкончанияРаботПлан <> ВремяОкончанияРаботПлан Тогда 
				
				ТекстСообщения = ТекстСообщения + Символы.ПС + 
				СтрШаблон("изменено время окончания работ с %1 на %2", 
				Выборка.ВремяОкончанияРаботПлан,
				ВремяОкончанияРаботПлан);
				
			КонецЕсли;
			
			Спр_ВКМ_УведомленияТГБот = Справочники.ВКМ_УведомленияТГБот.СоздатьЭлемент();
			Спр_ВКМ_УведомленияТГБот.Наименование = "Изменения в документе";
			Спр_ВКМ_УведомленияТГБот.ТекстСообщения = ТекстСообщения;
			Спр_ВКМ_УведомленияТГБот.Записать();
			
		КонецЦикла; 
		
	КонецЕсли;
    	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПроцентОплатыСпециалиста()
    	
    Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот КАК ПроцентОтРабот
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, Сотрудник = &Сотрудник) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних";
	
	Запрос.УстановитьПараметр("Сотрудник", Специалист);
	Запрос.УстановитьПараметр("Дата",      Дата);

	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ПроцентОтРабот;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Процедура ВыполнениеПроверкиУсловия(Отказ)
	
	ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВидДоговора");
	ПериодС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_ПериодС");
	ПериодПо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_ПериодПо");
		
	Если ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		
		ОбщегоНазначения.СообщитьПользователю("Договор не является абонентским обслуживанием.Проведение невозможно");
		Отказ = Истина;
		
	ИначеЕсли ПериодС > НачалоДня(Дата) или ПериодПо < КонецДня(Дата) Тогда 
		
		ОбщегоНазначения.СообщитьПользователю("Дата документа должна находиться в пределах срока действия договора.Проведение невозможно");
        Отказ = Истина; 
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти
#КонецЕсли
