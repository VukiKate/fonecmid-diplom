
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда
		
        КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
        КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
        КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.РеализацияТоваровУслуг);
        КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции


Процедура ПриОпределенииНастроекПечати(НастройкиОбъекта) Экспорт	
	НастройкиОбъекта.ПриДобавленииКомандПечати = Истина;
КонецПроцедуры


Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
// {{Вуйко 06.04.2025 : добавление команд печати
	
	// Реализация товаров и услуг
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Акт";
	КомандаПечати.Представление = НСтр("ru = 'Акт Об оказанных услугах'");
	КомандаПечати.Порядок = 5;
	
// Вуйко 06.04.2025}}	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
// {{Вуйко 06.04.2025 : печать

	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "Акт");
	Если ПечатнаяФорма <> Неопределено Тогда
	    ПечатнаяФорма.ТабличныйДокумент = ПечатьРеализацияТоваровУслуг(МассивОбъектов, ОбъектыПечати);
	    ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Акт Об оказанных услугах'");
	    ПечатнаяФорма.ПолныйПутьКМакету = "Документ.РеализацияТоваровУслуг.ПФ_MXL_АктОбОказанныхУслугах";
	КонецЕсли;
	
// Вуйко 06.04.2025}}
КонецПроцедуры

Функция ПечатьРеализацияТоваровУслуг(МассивОбъектов, ОбъектыПечати)
// {{Вуйко 06.04.2025 : печать реализации товаров и услуг

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_Акт";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеализацияТоваровУслуг.ПФ_MXL_АктОбОказанныхУслугах");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка"); 
	ОбластьШапкаТЧ = Макет.ПолучитьОбласть("ШапкаТЧ");
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТЧ");
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");

		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
		|	РеализацияТоваровУслуг.Номер КАК Номер,
		|	РеализацияТоваровУслуг.Дата КАК Дата,
		|	РеализацияТоваровУслуг.Организация КАК Организация,
		|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
		|	РеализацияТоваровУслуг.Договор КАК Договор,
		|	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента,
		|	РеализацияТоваровУслуг.Услуги.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Количество КАК Количество,
		|		Цена КАК Цена,
		|		Сумма КАК Сумма
		|	) КАК Услуги
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ДанныеДокументов = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеДокументов.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			// Все документы нужно выводить на разных страницах.
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1; 
		
		ВывестиЗаголовокРеализации(ДанныеДокументов, ТабличныйДокумент, Макет);
		ВывестиРеквизитыСторон(ДанныеДокументов, ТабличныйДокумент, Макет);
				
		ОбластьШапка.Параметры.Заполнить(ДанныеДокументов); 
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ТабличныйДокумент.Вывести(ОбластьШапкаТЧ);
				
		ВыборкаУслуги = ДанныеДокументов.Услуги.Выбрать(); 
		
		Пока ВыборкаУслуги.Следующий() Цикл
			ОбластьСтрока.Параметры.Заполнить(ВыборкаУслуги);
			ТабличныйДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		ОбластьИтого.Параметры.Всего = ДанныеДокументов.Ссылка.Услуги.Итог("Сумма");
		ТабличныйДокумент.Вывести(ОбластьИтого);

		ВывестиПодвалРеализации(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		 
			   		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати комплектов документов.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);		
		
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;
	
// Вуйко 06.04.2025}}
КонецФункции


Процедура ВывестиЗаголовокРеализации(ДанныеДокументов, ТабличныйДокумент, Макет)
// {{Вуйко 06.04.2025 : вывод заголовка реализации
	
	ОбластьЗаголовокДокумента = Макет.ПолучитьОбласть("Заголовок");
	
	ДанныеПечати = Новый Структура;
	
	ШаблонЗаголовка = "Акт об оказанных услугах №%1 от %2";
	ТекстЗаголовка = СтрШаблон(ШаблонЗаголовка,
		ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.Номер),
		Формат(ДанныеДокументов.Дата, "ДЛФ=DD"));
	ДанныеПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);
	
	ОбластьЗаголовокДокумента.Параметры.Заполнить(ДанныеПечати);
	
	//QRкод
		СтрокаСсылки = ПолучитьНавигационнуюСсылку(ДанныеДокументов.Ссылка);
		ДанныеQRКода = ГенерацияШтрихкода.ДанныеQRКода(СтрокаСсылки, 1, 120);
		
		Если НЕ ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
			ТекстСообщения = НСтр("ru = 'Не удалось сформировать QR-код.
			|Технические подробности см. в журнале регистрации.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе
			КартинкаQRКода = Новый Картинка(ДанныеQRКода);
			ОбластьЗаголовокДокумента.Рисунки.QRкод.Картинка = КартинкаQRКода; 
		КонецЕсли;
	//QRкод 
		
	ТабличныйДокумент.Вывести(ОбластьЗаголовокДокумента);
	
// Вуйко 06.04.2025}}
КонецПроцедуры


Процедура ВывестиРеквизитыСторон(ДанныеДокументов, ТабличныйДокумент, Макет)
// {{Вуйко 06.04.2025 : вывод реквизитов сторон

	ОбластьПоставщик = Макет.ПолучитьОбласть("Поставщик");
	ОбластьПокупатель = Макет.ПолучитьОбласть("Покупатель");
	ОбластьДоговор = Макет.ПолучитьОбласть("Договор");
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("ПредставлениеПоставщика", ДанныеДокументов.Организация);
	ДанныеПечати.Вставить("ПредставлениеПокупателя", ДанныеДокументов.Контрагент);
	ДанныеПечати.Вставить("ПредставлениеДоговора", ДанныеДокументов.Договор);
	
	ОбластьПоставщик.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьПоставщик);
	
	ОбластьПокупатель.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьПокупатель);
	
	ОбластьДоговор.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьДоговор);
	
// Вуйко 06.04.2025}}
КонецПроцедуры 


Процедура ВывестиПодвалРеализации(ДанныеДокументов, ТабличныйДокумент, Макет)
// {{Вуйко 06.04.2025 : Вывод подвала реализации

	ОбластьПодвалЗаказа = Макет.ПолучитьОбласть("ПодвалРеализации");
	
	ОбластьПодвалЗаказа.Параметры.СуммаПрописью = ЧислоПрописью(ДанныеДокументов.Ссылка.Услуги.Итог("Сумма"),
			"Л=ru_RU; ДП=Ложь",
			"рубль, рубля, рублей, м, копейка, копейки, копеек, ж");

	ТабличныйДокумент.Вывести(ОбластьПодвалЗаказа);
	
// Вуйко 06.04.2025}}
КонецПроцедуры 


#КонецОбласти

#КонецЕсли