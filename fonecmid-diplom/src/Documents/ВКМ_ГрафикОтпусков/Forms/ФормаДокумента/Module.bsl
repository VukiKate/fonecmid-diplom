#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьПодсветкуСтрок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстановитьПодсветкуСтрок();
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОкрытьАнализГрафика(Команда)
    // Вызов серверной процедуры для подготовки данных
    АдресВоВременномХранилище = ПодготовитьДанныеДляАнализаНаСервере();
    
    // Открытие дополнительной формы с параметрами
	ПараметрыДляФормы = Новый Структура("АдресДанных", АдресВоВременномХранилище);

    ОткрытьФорму("Документ.ВКМ_ГрафикОтпусков.Форма.АнализГрафика", ПараметрыДляФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти 


#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПодготовитьДанныеДляАнализаНаСервере()
	
    // Подготовка данных на сервере
    ДанныеДляДиаграммы = Новый Структура;
    ДанныеДляДиаграммы.Вставить("Год", Объект.Год);
    ДанныеДляДиаграммы.Вставить("Отпуска", Объект.ОтпускаСотрудников.Выгрузить());
    
    // Помещение данных во временное хранилище
    Возврат ПоместитьВоВременноеХранилище(ДанныеДляДиаграммы); 
	
КонецФункции


&НаСервере
Процедура УстановитьПодсветкуСтрок()
	
	Если ЗначениеЗаполнено(Объект.ОтпускаСотрудников) Тогда 
		
		ТаблицаОтпуск = Объект.ОтпускаСотрудников.Выгрузить();
		ТаблицаОтпуск.Колонки.Добавить("КоличествоДней", Новый ОписаниеТипов("Число")); 
		ТаблицаОтпуск.Свернуть("Сотрудник", "КоличествоДней, ДатаНачала, ДатаОкончания, НомерСтроки");
		
		Для Каждого Элемент Из ТаблицаОтпуск Цикл
			
			КоличествоДней = (Элемент.ДатаОкончания - Элемент.ДатаНачала)/86400+1;
			
			Если КоличествоДней > 28 Тогда
				
				ЭлементТаблицы = УсловноеОформление.Элементы.Добавить();
				
				ПолеЭлемента = ЭлементТаблицы.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОтпускаСотрудниковСотрудник.Имя);
				
				ОтборЭлемента = ЭлементТаблицы.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОтпускаСотрудников.НомерСтроки");
				ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				ОтборЭлемента.ПравоеЗначение = Элемент.НомерСтроки;
				
				ЭлементТаблицы.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Желтый);
				
			Иначе
				
			    ЭлементТаблицы = УсловноеОформление.Элементы.Добавить();
				
				ПолеЭлемента = ЭлементТаблицы.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОтпускаСотрудниковСотрудник.Имя);
				
				ОтборЭлемента = ЭлементТаблицы.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОтпускаСотрудников.НомерСтроки");
				ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				ОтборЭлемента.ПравоеЗначение = Элемент.НомерСтроки;
				
				ЭлементТаблицы.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Белый);
								
			КонецЕсли; 
						
		КонецЦикла;
		
	КонецЕсли;				
		
КонецПроцедуры

#КонецОбласти








